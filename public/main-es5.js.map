{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","AppModule","declarations","providers","bootstrap","DashboardComponent","HomeComponent","LoginComponent","_flashMessagesService","authService","route","user","username","password","authenticateUser","subscribe","data","success","storeUserData","token","show","cssClass","timeout","navigate","msg","onLoginSubmit","NavbarComponent","logout","ProfileComponent","getProfile","profile","err","console","log","RegisterComponent","validateService","name","email","validateRegister","validateEmail","registerUser","onRegisterSubmit","AuthGuard","router","isLoggedIn","AuthService","http","headers","append","post","pipe","res","loadToken","authToken","localStorage","setItem","JSON","stringify","getItem","jwtHelper","id_token","undefined","isTokenExpired","clear","providedIn","ValidateService","re","test","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <br>\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst appRoutes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] }\n\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    DashboardComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes),\n    FlashMessagesModule.forRoot()\n  ],\n  providers: [ValidateService, AuthService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2 class=\"page-header\">Dashboard</h2>\n<p>Welcome to your dashboard</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>MEAN Authentication App</h1>\n    <p class=\"lead\">Welcome to our custom MEAN authentication application built from scratch </p>\n    <div>\n        <a class=\"btn btn-outline-primary\" [routerLink]=\"['/register']\">Register</a>\n        <a class=\"btn btn-outline-dark ml-2\" [routerLink]=\"['/login']\">Login</a>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-md-4\">\n        <h3>Express Backend</h3>\n        <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>Angular-CLI</h3>\n        <p>Angular-CLI to generate components, services and more. Local dev server and easy compilation</p>\n    </div>\n    <div class=\"col-md-4\">\n        <h3>JWT Tokens</h3>\n        <p>Full featured authentication using JSON web tokens. Login and store user data</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n\n\n\n  constructor(private _flashMessagesService: FlashMessagesService, private authService: AuthService, private route: Router) { }\n\n  ngOnInit(): void {\n  }\n  onLoginSubmit() {\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateUser(user).subscribe(data => {\n      if ((data as any).success) {\n        this.authService.storeUserData((data as any).token, (data as any).user);\n        this._flashMessagesService.show('You are now logged in', { cssClass: 'alert-success', timeout: 5000 });\n        this.route.navigate(['dashboard']);\n      } else {\n        this._flashMessagesService.show((data as any).msg, { cssClass: 'alert-danger', timeout: 5000 });\n        this.route.navigate(['login']);\n      }\n    });\n  }\n\n}\n","<br><br>\n<h2 class=\"page-header\">Login</h2>\n<br>\n<form (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    <div class=\"checkbox\">\n        <label>\n            <input type=\"checkbox\" value=\"remember-me\"> Remember me\n        </label>\n    </div>\n    <input type=\"submit\" class=\"btn btn-outline-success\" value=\"Login\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private _flashMessagesService: FlashMessagesService, public authService: AuthService, private route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onLogoutClick() {\n    this.authService.logout();\n    this._flashMessagesService.show('You are logged out', {\n      cssClass: 'alert-warning', timeout: 1000\n    });\n    this.route.navigate(['/']);\n    return false;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\">Mean Authentication</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\n        aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav navbar-left\">\n            <li *ngIf=\"!authService.isLoggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/']\">Home</a>\n            </li>\n        </ul>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n        <div class=\"ml-5\"></div>\n\n        <ul class=\"navbar-nav\">\n            <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/dashboard']\">Dashboard</a>\n            </li>\n            <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/profile']\">Profile</a>\n            </li>\n\n\n\n\n            <li *ngIf=\"!authService.isLoggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">Login</a>\n            </li>\n            <li *ngIf=\"!authService.isLoggedIn()\" class=\"nav-item\" [routerLinkActive]=\"['active']\"\n                [routerLinkActiveOptions]=\"{exact:true}\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\">Register</a>\n            </li>\n            <li *ngIf=\"authService.isLoggedIn()\" class=\"nav-item\">\n                <a class=\"nav-link\" (click)=\"onLogoutClick()\" href=\"#\">Logout</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user: Object;\n\n  constructor(private authService: AuthService, private route: Router) { }\n\n  ngOnInit(): void {\n    this.authService.getProfile().subscribe((profile: any) => {\n      this.user = profile.user;\n    },\n      err => {\n        console.log(err);\n        return false;\n      });\n  }\n\n}\n","<!--\n<div *ngIf=\"user\">\n    <h2 class=\"page-header\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <li class=\"list-group-item\">Username : {{user.username}}</li>\n        <li class=\"list-group-item\">Email : {{user.email}}</li>\n    </ul>\n</div>\n-->\nprofile works","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n\n\n  constructor(private validateService: ValidateService, private _flashMessagesService: FlashMessagesService, private authService: AuthService, private route: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      username: this.username,\n      password: this.password\n    }\n\n    //Required fields\n    if (!this.validateService.validateRegister(user)) {\n      this._flashMessagesService.show('please fill all fields', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n    //Validate Email\n    if (!this.validateService.validateEmail(user.email)) {\n      this._flashMessagesService.show('please use a valid email', { cssClass: 'alert-danger', timeout: 3000 });\n      return false;\n    }\n\n    //Register User\n    this.authService.registerUser(user).subscribe(data => {\n\n      if ((data as any).success) {\n        this._flashMessagesService.show('You made sucessfull registration and got access to login', { cssClass: 'alert-success', timeout: 3000 });\n        this.route.navigate(['/login']);\n      } else {\n        this._flashMessagesService.show('Something went wrong', { cssClass: 'alert-danger', timeout: 3000 });\n        this.route.navigate(['/register']);\n      }\n    });\n\n\n  }\n\n}\n","<br>\n<h2 class=\"page-header\">Register</h2>\n<br><br>\n<form (submit)=\"onRegisterSubmit()\">\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-outline-primary\" value=\"Submit\">\n</form>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate() {\r\n        if (this.authService.isLoggedIn()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/']);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/register', user, { headers: headers })\n      .pipe(map(res => res));\n  }\n  authenticateUser(user) {\n    let headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/authenticate', user, { headers: headers })\n      .pipe(map(res => res));\n  }\n\n  getProfile(): any {\n    let headers = new HttpHeaders();\n    this.loadToken();\n    headers.append('Authorization', this.authToken);\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/profile', { headers: headers })\n      .pipe(map(res => res));\n  }\n\n  storeUserData(token, user) {\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n  }\n\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    this.authToken = token;\n  }\n\n  isLoggedIn() {\n    let jwtHelper = new JwtHelperService();\n    if (localStorage.id_token == undefined)\n      return false;\n    return !jwtHelper.isTokenExpired(localStorage.id_token);\n  }\n\n  logout() {\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if (user.name == undefined || user.email == undefined || user.username == undefined || user.password == undefined) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}